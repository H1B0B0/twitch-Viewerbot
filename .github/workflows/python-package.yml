name: Python package

on:
  push:
    tags:
      - '*'
    branches:
      - "main"
  pull_request:
    branches:
      - "main"

jobs:
  test_and_build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11"]

    steps:
    - name: code download
      uses: actions/checkout@v2
      
    - name: python configuration ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Installation of dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install build pytest
        pip install .[dev]
        
    - name: pytest
      run: |
        pytest
        
    - name: PyInstaller
      if: startsWith(github.ref, 'refs/tags/')
      run: |
        pip install pyinstaller
        pyinstaller --noconfirm --onefile --windowed --icon "src/twitchbot/interface_assets/R.ico" --name "Twitch ViewerBOT" --clean --add-data "/home/menet/.local/lib/python3.11/site-packages/customtkinter:customtkinter/" --add-data "/home/menet/.local/lib/python3.11/site-packages/streamlink:streamlink/" --add-data "/home/menet/.local/lib/python3.11/site-packages/fake_useragent:fake_useragent/" --add-data "/home/menet/Desktop/autre/twitch_bot/src/twitchbot/interface_assets:interface_assets/" --add-data "/home/menet/Desktop/autre/twitch_bot/src/twitchbot:twitchbot/" --add-data "/home/menet/.local/lib/python3.11/site-packages/Crypto:Crypto/" "/home/menet/Desktop/autre/twitch_bot/src/twitchbot/main.py"
    
    - name: extraction of toml value
      if: startsWith(github.ref, 'refs/tags/')
      id: extract_values
      run: |
        version=$(grep -oP '(?<=version = ")[^"]*' pyproject.toml)
        release_name=$(grep -oP '(?<=name = ")[^"]*' pyproject.toml)
        echo "::set-output name=version::$version"
        echo "::set-output name=release_name::$release_name"
      
    - name: creation of draft release
      if: startsWith(github.ref, 'refs/tags/')
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.extract_values.outputs.version }}
        release_name: ${{ steps.extract_values.outputs.release_name }}
        draft: true
        prerelease: false

    - name: upload of the folder
      if: startsWith(github.ref, 'refs/tags/')
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/Twitch ViewerBOT.exe
        asset_name: Twitch ViewerBOT.exe
        asset_content_type: application/exe
      
    - name: publication of the release
      if: startsWith(github.ref, 'refs/tags/')
      uses: eregon/publish-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        release_id: ${{ steps.create_release.outputs.id }}
