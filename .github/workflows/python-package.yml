name: Python package

on:
  push:
    tags:
      - "*"
    branches:
      - "main"
  pull_request:
    branches:
      - "main"

jobs:
  # pytest:
  #   runs-on: ubuntu-latest
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       python-version: ["3.11"]

  #   steps:
  #     - name: code download
  #       uses: actions/checkout@v2

  #     - name: python configuration ${{ matrix.python-version }}
  #       uses: actions/setup-python@v2
  #       with:
  #         python-version: ${{ matrix.python-version }}

  #     - name: Installation of dependencies
  #       run: |
  #         python -m pip install --upgrade pip
  #         python -m pip install build pytest
  #         pip install .[dev]

  #     - name: pytest
  #       run: |
  #         pytest

  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/checkout@v1
      - name: Install Python
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/setup-python@v1
        with:
          python-version: "3.11"
          architecture: "x64"
      - name: Install requirements
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          python -m pip install --upgrade pip
          python -m pip install pyinstaller
          python -m pip install crypto
          pip install .[dev]

      - name: Get Python site packages path
        if: startsWith(github.ref, 'refs/tags/')
        id: get-site-packages-path
        run: |
          echo "::set-output name=site-packages-path::$(python -c "import site; print(site.getsitepackages()[0].replace('\\\\', '\\\\\\\\'))")"

      - name: create .env file
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          echo "BOT_TOKEN=${{ secrets.BOT_TOKEN }}" >> D:\\a\\twitch-Viewerbot\\twitch-Viewerbot\\src\\twitchbot\\.env
          echo "CLIENT_ID=${{ secrets.CLIENT_ID }}" >> D:\\a\\twitch-Viewerbot\\twitch-Viewerbot\\src\\twitchbot\\.env
          echo "CLIENT_SECRET=${{ secrets.CLIENT_SECRET }}" >> D:\\a\\twitch-Viewerbot\\twitch-Viewerbot\\src\\twitchbot\\.env
          echo "REDIRECT_URI=${{ secrets.REDIRECT_URI }}" >> D:\\a\\twitch-Viewerbot\\twitch-Viewerbot\\src\\twitchbot\\.env
          echo "ROLE_ID=${{ secrets.ROLE_ID }}" >> D:\\a\\twitch-Viewerbot\\twitch-Viewerbot\\src\\twitchbot\\.env
          echo "SERVER_ID=${{ secrets.SERVER_ID }}" >> D:\\a\\twitch-Viewerbot\\twitch-Viewerbot\\src\\twitchbot\\.env
          echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" >> D:\\a\\twitch-Viewerbot\\twitch-Viewerbot\\src\\twitchbot\\.env
          echo "${{ secrets.ACCOUNTS }}" >> D:\\a\\twitch-Viewerbot\\twitch-Viewerbot\\src\\twitchbot\\valid_tokens.txt
      
      - name: Run PyInstaller for the first program
        if: startsWith(github.ref, 'refs/tags/')
        env:
          CLIENT_ID: ${{ secrets.CLIENT_ID }}
          CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
          REDIRECT_URI: ${{ secrets.REDIRECT_URI }}
          SERVER_ID: ${{ secrets.SERVER_ID }}
          ROLE_ID: ${{ secrets.ROLE_ID }}
          BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
        run: |
          pyinstaller --noconfirm --onefile --windowed --icon "D:\\a\\twitch-Viewerbot\\twitch-Viewerbot\\src\\twitchbot\\interface_assets\\R.ico" --name "Twitch ViewerBOT Premium" --clean `
          --add-data "D:\\a\\twitch-Viewerbot\\twitch-Viewerbot\\src\\twitchbot\\interface_assets;interface_assets/" `
          --add-data "D:\\a\\twitch-Viewerbot\\twitch-Viewerbot\\src\\twitchbot;twitchbot/" `
          --add-data "${env:pythonLocation}\\Lib\\site-packages\\customtkinter;customtkinter/" `
          --add-data "${env:pythonLocation}\\Lib\\site-packages\\streamlink;streamlink/" `
          --add-data "${env:pythonLocation}\\Lib\\site-packages\\fake_useragent;fake_useragent/" `
          --add-data "${env:pythonLocation}\\Lib\\site-packages\\Crypto;Crypto/" `
          --add-data "${env:pythonLocation}\\Lib\\site-packages\\cffi;cffi/" `
          --add-data "${env:pythonLocation}\\Lib\\site-packages\\websocket;websocket/" `
          --add-data "${env:pythonLocation}\\Lib\\site-packages\\requests;requests/" `
          --add-data "${env:pythonLocation}\\Lib\\site-packages\\dotenv;dotenv/" `
          --add-data "${env:pythonLocation}\\Lib\\site-packages\\av;av/" `
          --add-data "${env:pythonLocation}\\Lib\\site-packages\\openai;openai/" `
          --add-data "${env:pythonLocation}\\Lib\\site-packages\\argparse;argparse/" `
          --add-data "${env:pythonLocation}\\Lib\\site-packages\\decouple;decouple/" `
          --add-data "${env:pythonLocation}\\Lib\\site-packages\\emoji;emoji/" `
          --hidden-import "os" `
          --hidden-import "requests" `
          --hidden-import "webbrowser" `
          --hidden-import "customtkinter" `
          --hidden-import "platform" `
          --hidden-import "pathlib" `
          --hidden-import "threading" `
          --hidden-import "tkinter.messagebox" `
          --hidden-import "dotenv" `
          --hidden-import "tkinter.filedialog" `
          --hidden-import "viewer_bot" `
          --hidden-import "flask" `
          --exclude-module pydantic `
          "D:\\a\\twitch-Viewerbot\\twitch-Viewerbot\\src\\twitchbot\\premium_version.py"

      - name: Run PyInstaller for the console version
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          pyinstaller --noconfirm --onefile --icon "D:\\a\\twitch-Viewerbot\\twitch-Viewerbot\\src\\twitchbot\\interface_assets\\R.ico" --name "Twitch ViewerBOT Free" --clean `
          --add-data "D:\\a\\twitch-Viewerbot\\twitch-Viewerbot\\src\\twitchbot\\interface_assets;interface_assets/" `
          --add-data "D:\\a\\twitch-Viewerbot\\twitch-Viewerbot\\src\\twitchbot;twitchbot/" `
          --add-data "${env:pythonLocation}\\Lib\\site-packages\\customtkinter;customtkinter/" `
          --add-data "${env:pythonLocation}\\Lib\\site-packages\\streamlink;streamlink/" `
          --add-data "${env:pythonLocation}\\Lib\\site-packages\\fake_useragent;fake_useragent/" `
          --add-data "${env:pythonLocation}\\Lib\\site-packages\\Crypto;Crypto/" `
          --add-data "${env:pythonLocation}\\Lib\\site-packages\\cffi;cffi/" `
          --add-data "${env:pythonLocation}\\Lib\\site-packages\\websocket;websocket/" `
          --add-data "${env:pythonLocation}\\Lib\\site-packages\\rich;rich/" `
          --hidden-import "ctypes.util" `
          --hidden-import "_cffi_backend" `
          --hidden-import "uuid" `
          "D:\\a\\twitch-Viewerbot\\twitch-Viewerbot\\src\\twitchbot\\free_version.py"

      - uses: actions/upload-artifact@v2
        with:
          name: Windows_qwiklabs
          path: dist/qwiklab_badge_checker.exe

      - name: Create release
        if: startsWith(github.ref, 'refs/tags/')
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{secrets.RELEASE_TOKEN}}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            # Changelog 2.0
            - 🆕 Added Discord login feature: This new feature allows users to verify their Patreon subscription status.
            - 🤖 Introduced Premium bot: This new bot can be used exclusively by Patreon users.
            - 🐛 Bug fixes: We've addressed and resolved several bugs to improve the overall user experience.
            - 🚀 Launched Free bot: We're excited to announce the availability of a new bot that can be used by all users, regardless of their Patreon subscription status.
            - 🔄 Added auto update feature
            - 📝 Added new logged in message
            - 🆕 Added a new feature to view active threads
            - 🆕 Implemented a new policy for a more beautiful UI
            # New features 2.1
            - 🤖 Introduced messages sending in the chat: The bot now sends messages in the chat based on the game being played and what the streamer is saying. These messages are personalized using AI. Only available for premium users.
            # Patreon and Discord server to use the premium version
            - 💰 [Subscribe here](https://www.patreon.com/hibo/membership)
            - 🎮 [Join the server here](https://discord.gg/2Sqvx25auv)
          draft: false
          prerelease: false

      - name: Set Release Asset Data
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          echo "upload_url=${{ steps.create_release.outputs.upload_url }}" >> $GITHUB_ENV
          echo "asset_path=dist/Twitch ViewerBOT Premium.exe" >> $GITHUB_ENV
          echo "asset_name=Twitch ViewerBOT Premium.exe" >> $GITHUB_ENV
          echo "asset_content_type=application/exe" >> $GITHUB_ENV
          echo "asset_path2=dist/Twitch ViewerBOT Free.exe" >> $GITHUB_ENV
          echo "asset_name2=Twitch ViewerBOT Free.exe" >> $GITHUB_ENV
          echo "asset_content_type2=application/exe" >> $GITHUB_ENV

      - name: Upload Release Asset 1
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{secrets.RELEASE_TOKEN}}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/Twitch ViewerBOT Premium.exe
          asset_name: Twitch ViewerBOT Premium.exe
          asset_content_type: application/exe

      - name: Upload Release Asset 2
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{secrets.RELEASE_TOKEN}}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/Twitch ViewerBOT Free.exe
          asset_name: Twitch ViewerBOT Free.exe
          asset_content_type: application/exe
